{"version":3,"sources":["assets/images/logo-RM.jpg","Components/Header/Header.tsx","Components/Navbar/Navbar.tsx","Redux/eqpmnt-reduser.ts","Components/EquipmentList/EquipmentComponent/EquipmentCardWithTable.tsx","Components/EquipmentList/EquipmentListNewWithTable.tsx","App.tsx","reportWebVitals.ts","Redux/redux-store.ts","index.tsx","Components/EquipmentList/EquipmentList.module.css","Components/EquipmentList/EquipmentComponent/EquipmentCard.module.css","Components/Header/Header.module.css","Components/Navbar/Navbar.module.css"],"names":["Header","className","style","header","src","logo","alt","Navbar","navbar","initialEqpmntState","id","v1","name","sn","instDate","owner","repairs","date","pulseCount","serviceMan","whatWasDone","notes","whatWasReplaced","eqpmntReducer","state","action","type","newEqpmnt","stateFiltered","filter","eq","eqpmntId","stateCopy","findWith","EquipmentCardWithTable","props","equipmentState","useSelector","Equipment","equipmentCard","Paper","elevation","TableContainer","component","Table","table","aria-label","TableHead","TableRow","TableCell","align","index","map","r","array","scope","TableBody","Button","onClick","setIsInfoShowing","EquipmentListNewWithTable","console","log","allEquipment","dispatch","useDispatch","useState","typeName","setTypeName","setSn","setDate","error","setError","setOwner","isInfoShowing","showingIndex","setShowingIndex","setEquipmentState","equipment","Select","labelId","label","variant","marginLeft","width","onChange","e","target","value","currentTarget","size","defaultValue","marginTop","trimmedTypeName","trim","trimmedSn","trimmedDate","trimmedOwner","addEqpmntAC","store","getState","color","sort","a","b","showInfo","IconButton","Delete","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","createStore","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7c705ddb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-RM.232d760a.jpg\";","import React from 'react';\r\nimport style from './Header.module.css';\r\nimport logo from '../../assets/images/logo-RM.jpg'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={style.header}>\r\n            <img src={logo} alt={\"logo\"}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport style from './Navbar.module.css';\r\nimport logo from '../../assets/images/logo-RM.jpg'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className={style.navbar}>\r\n            <div>Оборудование</div>\r\n            <div>Медцентры</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import {v1} from \"uuid\";\r\n\r\nexport type SingleRepairType = {\r\n    date: string\r\n    pulseCount: number\r\n    whatWasDone: string\r\n    serviceMan: string\r\n    whatWasReplaced: string\r\n    notes: string\r\n}\r\n\r\nexport type EqpmntType = {\r\n    id: string\r\n    name: string\r\n    sn: string\r\n    instDate: string\r\n    owner: string\r\n\r\n    repairs?: Array<SingleRepairType>\r\n}\r\n\r\nexport type EqpmntActionType = addEqpmntActionType | removeEqpmntActionType | findEqpmntActionType | showAllEqpmntActionType\r\n\r\nexport type addEqpmntActionType = {\r\n    type: \"ADD_NEW_EQPMNT\"\r\n    // id: string\r\n    name: string\r\n    sn: string\r\n    instDate: string\r\n    owner: string\r\n\r\n}\r\nexport type findEqpmntActionType = {\r\n    type: \"FIND_EQPMNT\"\r\n    // id: string\r\n    owner: string\r\n    name: string\r\n    sn: string\r\n    instDate: string\r\n    findWith: \"name\" | \"date\" | \"sn\" | \"owner\"\r\n}\r\nexport type removeEqpmntActionType = {\r\n    type: \"REMOVE_EQPMNT\"\r\n    // id: string\r\n    eqpmntId: string\r\n\r\n}\r\nexport type showAllEqpmntActionType = {\r\n    type: \"SHOW_ALL_EQPMNT\"\r\n}\r\n\r\nexport const addEqpmntAC = (name: string, sn: string, instDate: string, owner: string): addEqpmntActionType => {\r\n    return {\r\n        type: \"ADD_NEW_EQPMNT\",\r\n        name: name,\r\n        sn: sn,\r\n        instDate: instDate,\r\n        owner: owner\r\n    }\r\n}\r\n\r\nexport const dellEqpmntAC = (eqpmntId: string): removeEqpmntActionType => {\r\n    return {\r\n        type: \"REMOVE_EQPMNT\",\r\n        eqpmntId: eqpmntId\r\n    }\r\n}\r\n\r\nexport const findEqpmntAC = (name: string, sn: string, instDate: string, owner: string, findWith: \"name\" | \"date\" | \"sn\" | \"owner\"): findEqpmntActionType => {\r\n    return {\r\n        type: \"FIND_EQPMNT\",\r\n        name: name,\r\n        sn: sn,\r\n        instDate: instDate,\r\n        findWith: findWith,\r\n        owner: owner\r\n    }\r\n}\r\n\r\nexport const showAllEqpmntAC = (): showAllEqpmntActionType => {\r\n    return {\r\n        type: \"SHOW_ALL_EQPMNT\",\r\n\r\n    }\r\n}\r\n\r\nexport type initialEqpmntStateType = Array<EqpmntType>\r\n\r\nconst initialEqpmntState = [\r\n    {id: v1(), name: \"Vectus\", sn: \"35-0651\", instDate: \"18.04.2013\", owner: \"ШайнЭст Люкс\",\r\n        repairs:[{date: \"2021-01-24\", pulseCount: 12000000, serviceMan: \"Карпелёв\", whatWasDone: \"замена/ремонт помпы\", notes: \"выходной\", whatWasReplaced: \"-\"},\r\n            {date: \"2021-01-24\", pulseCount: 12000000, serviceMan: \"Карпелёв\", whatWasDone: \"замена Насадки\", notes: \"-\", whatWasReplaced: \"насадка\"},\r\n            {date: \"2021-01-14\", pulseCount: 11950000, serviceMan: \"Карпелёв\", whatWasDone: \"Ремонт БП\", notes: \"следить за перегревом\", whatWasReplaced: \"-\"}]},\r\n\r\n    {id: v1(), name: \"Vectus\", sn: \"35-0632\", instDate: \"06.01.2014\", owner: \"ШайнЭст Люкс\", repairs:[{date: \"2021-01-24\", serviceMan: \"Карпелёв\", whatWasDone: \"замена/ремонт помпы\", notes: \"выходной\", whatWasReplaced: \"-\"},\r\n            ]},\r\n\r\n    {id: v1(), name: \"Icon\", sn: \"25-0618\", instDate: \"18.04.2013\", owner: \"ШайнЭст Люкс\"},\r\n    {id: v1(), name: \"MedArt\", sn: \"123456\", instDate: \"02.04.2020\", owner: \"ШайнЭст Люкс\"},\r\n\r\n    {id: v1(), name: \"Vectus\", sn: \"35-0269\", instDate: \"4.18.2013\", owner: \"ШайнЭст Плюс\"},\r\n    {id: v1(), name: \"Vectus\", sn: \"35-0639\", instDate: \"26.02.2014\", owner: \"ШайнЭст Плюс\"},\r\n\r\n    {id: v1(), name: \"Vectus\", sn: \"35-1351\", instDate: \"18.10.2016\", owner: \"ШайнЭст Медикал\"},\r\n    {id: v1(), name: \"Vectus\", sn: \"35-1504\", instDate: \"XX.08.2017\", owner: \"ШайнЭст Медикал\"},\r\n\r\n] as Array<EqpmntType>\r\n\r\nexport const eqpmntReducer = (state = initialEqpmntState, action: EqpmntActionType): initialEqpmntStateType => {\r\n    switch (action.type) {\r\n        case \"ADD_NEW_EQPMNT\": {\r\n\r\n            let newEqpmnt: EqpmntType = {\r\n                id: v1(), name: action.name, sn: action.sn,\r\n                instDate: action.instDate,\r\n                owner: action.owner\r\n            }\r\n            return [newEqpmnt, ...state]\r\n        }\r\n\r\n        case \"REMOVE_EQPMNT\": {\r\n            let stateFiltered = state.filter((eq) => eq.id !== action.eqpmntId)\r\n            let stateCopy = [...stateFiltered]\r\n            return stateCopy\r\n        }\r\n\r\n        case \"FIND_EQPMNT\": {\r\n            let stateFiltered = [...state]\r\n            switch (action.findWith) {\r\n                case \"name\":\r\n                    stateFiltered = state.filter(eq => eq.name === action.name)\r\n            }\r\n            switch (action.findWith) {\r\n                case \"sn\":\r\n                    stateFiltered = state.filter(eq => eq.sn === action.sn)\r\n            }\r\n            switch (action.findWith) {\r\n                case \"date\":\r\n                    stateFiltered = state.filter(eq => eq.instDate === action.instDate)\r\n            }\r\n            switch (action.findWith) {\r\n                case \"owner\":\r\n                    stateFiltered = state.filter(eq => eq.owner === action.owner)\r\n            }\r\n\r\n            let stateCopy = [...stateFiltered]\r\n\r\n            return stateCopy\r\n        }\r\n\r\n        case \"SHOW_ALL_EQPMNT\":\r\n            return state\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\nexport default eqpmntReducer\r\n\r\n// old state\r\n// eqpmnt: [\r\n//     {id: v1(), name: \"Vectus\", sn: \"35-0651\", instDate: \"18.04.2013\", owner: \"ShineEst\", subOwner: \"LUX\"},\r\n//     {id: v1(), name: \"Vectus\", sn: \"35-0632\", instDate: \"06.01.2014\", owner: \"ShineEst\", subOwner: \"LUX\"},\r\n//     {id: v1(), name: \"Icon\", sn: \"25-0618\", instDate: \"18.04.2013\", owner: \"ShineEst\", subOwner: \"LUX\"},\r\n//\r\n//     {id: v1(), name: \"Vectus\", sn: \"35-0269\", instDate: \"4.18.2013\", owner: \"ShineEst\", subOwner: \"Plus\"},\r\n//     {id: v1(), name: \"Vectus\", sn: \"35-0639\", instDate: \"26.02.2014\", owner: \"ShineEst\", subOwner: \"Plus\"},\r\n//\r\n//     {id: v1(), name: \"Vectus\", sn: \"35-1351\", instDate: \"18.10.2016\", owner: \"ShineEst\", subOwner: \"Medical\"},\r\n//     {id: v1(), name: \"Vectus\", sn: \"35-1504\", instDate: \"XX.08.2017\", owner: \"ShineEst\", subOwner: \"Medical\"},\r\n//\r\n// ] as Array<EqpmntType>","import React, {useState} from 'react';\r\nimport {initialEqpmntStateType} from \"../../../Redux/eqpmnt-reduser\";\r\nimport {\r\n    Button, Grid, IconButton,\r\n    Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow,\r\n} from \"@material-ui/core\";\r\nimport style from \"../../EquipmentList/EquipmentComponent/EquipmentCard.module.css\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../Redux/redux-store\";\r\nimport {Delete} from \"@material-ui/icons\";\r\n\r\nexport type EquipmentPropsType = {\r\n    // store: storeType\r\n    // setEquipmentState: () => void\r\n    index: number\r\n    setIsInfoShowing: (f: boolean) => void\r\n}\r\n\r\nfunction EquipmentCardWithTable(props: EquipmentPropsType) {\r\n\r\n    const equipmentState = useSelector<AppRootStateType, initialEqpmntStateType>(state => state.Equipment)\r\n\r\n    return (\r\n        <div className={style.equipmentCard}>\r\n            <Paper elevation={3}>\r\n\r\n                <TableContainer component={Paper}>\r\n                    <Table className={style.table} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Дата ремонта</TableCell>\r\n                                <TableCell align=\"right\">Кол-во импульсов </TableCell>\r\n                                <TableCell align=\"left\">Проведённые работы</TableCell>\r\n                                <TableCell align=\"left\">Заменено</TableCell>\r\n                                <TableCell align=\"left\">Комментарии</TableCell>\r\n                                <TableCell align=\"right\">Исполнитель</TableCell>\r\n\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        {equipmentState[props.index].repairs?.map((r, index, array) => {\r\n                            return <TableRow key={r.date}>\r\n                                <TableCell component=\"th\" scope=\"row\">{r.date}\r\n\r\n                                    {array[index + 1] && array[index + 1].date !== array[index].date && <hr/>}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{r.pulseCount} </TableCell>\r\n                                <TableCell align=\"left\">{r.whatWasDone}</TableCell>\r\n                                <TableCell align=\"left\">{r.whatWasReplaced}</TableCell>\r\n                                <TableCell align=\"left\">{r.notes}</TableCell>\r\n                                <TableCell align=\"right\">{r.serviceMan}</TableCell>\r\n                            </TableRow>\r\n\r\n                        })}\r\n                        <TableBody>\r\n\r\n                        </TableBody>\r\n\r\n                    </Table>\r\n                </TableContainer>\r\n                <Button onClick={() => props.setIsInfoShowing(false)} style={{}}>X</Button>\r\n            </Paper>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EquipmentCardWithTable","import React, {ChangeEvent, useState} from 'react';\r\nimport EquipmentCard, {EquipmentPropsType} from \"./EquipmentComponent/EquipmentCard\";\r\nimport {storeType} from \"../../index\";\r\nimport {\r\n    IconButton,\r\n    InputLabel,\r\n    MenuItem,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow\r\n} from \"@material-ui/core\";\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField/TextField';\r\nimport style from './EquipmentList.module.css'\r\nimport {addEqpmntAC, dellEqpmntAC, EqpmntType, initialEqpmntStateType} from \"../../Redux/eqpmnt-reduser\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../Redux/redux-store\";\r\nimport EquipmentCardWithTable from \"./EquipmentComponent/EquipmentCardWithTable\";\r\nimport {Delete} from \"@material-ui/icons\";\r\n\r\n\r\nexport type CustomerCardPropsType = {\r\n    store: storeType\r\n}\r\n\r\nexport type TypeNameType = string\r\n\r\n// | \"\" | \"Vectus\" | \"Icon\" | \"StarLux\" | \"Polus\" | \"Fimet\" | \"vectus\" | \"icon\" | \"starLux\" | \"polus\" | \"fimet\"\r\n\r\nfunction EquipmentListNewWithTable(props: CustomerCardPropsType) {\r\n    console.log(\"EquipmentListNewWithTable\")\r\n    const allEquipment = useSelector<AppRootStateType, initialEqpmntStateType>(state => state.Equipment)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [typeName, setTypeName] = useState<TypeNameType>(\"\")\r\n    const [sn, setSn] = useState<string>(\"\")\r\n    const [date, setDate] = useState<string>(\"\")\r\n    const [error, setError] = useState(\"\")\r\n    const [owner, setOwner] = useState(\"\")\r\n    const [isInfoShowing, setIsInfoShowing] = useState(false)\r\n    const [showingIndex, setShowingIndex] = useState(0)\r\n    const [equipmentState, setEquipmentState] = useState<Array<EqpmntType>>(allEquipment)\r\n\r\n    const addEqpmnt = () => {\r\n        const trimmedTypeName = typeName.trim()  //обрезает пробелы в начале и в конце строки\r\n        const trimmedSn = sn.trim()\r\n        const trimmedDate = date.trim()\r\n        const trimmedOwner = owner.trim()\r\n        if (trimmedTypeName && trimmedSn && trimmedDate && trimmedOwner) {\r\n            // (props.store.dispatch({type: \"ADD_NEW_EQPMNT\", sn: sn, name: typeName, instDate: date}))\r\n            dispatch(addEqpmntAC(typeName, sn, date, owner))\r\n            setEquipmentState(props.store.getState().Equipment)\r\n            // setEquipmentState(props.store.getState().Equipment)\r\n\r\n\r\n        } else {\r\n            setError(\"Заполните все поля.\")\r\n        }\r\n        //setError('')\r\n        setTypeName(\"\")\r\n        setSn(\"\")\r\n        setDate(\"\")\r\n        setOwner(\"\")\r\n    }\r\n\r\n    const delEq = (id: string) => {\r\n        dispatch(dellEqpmntAC(id))\r\n        setEquipmentState(props.store.getState().Equipment)\r\n    }\r\n\r\n    const findEqpmnt = () => {\r\n        const trimmedTypeName = typeName.trim()\r\n        const trimmedSn = sn.trim()\r\n        const trimmedDate = date.trim()\r\n        const trimmedOwner = owner.trim()\r\n        if (trimmedTypeName) {\r\n            setEquipmentState(props.store.getState().Equipment.filter(eq => eq.name === typeName))\r\n        } else if (trimmedSn) {\r\n            setEquipmentState(props.store.getState().Equipment.filter(eq => eq.sn === sn))\r\n        } else if (trimmedDate) {\r\n            setEquipmentState(props.store.getState().Equipment.filter(eq => eq.instDate === date))\r\n        } else if (trimmedOwner) {\r\n            setEquipmentState(props.store.getState().Equipment.filter(eq => eq.owner === owner))\r\n        } else {\r\n            setError(\"Заполните поле, по которому нужно искать.\")\r\n\r\n        }\r\n        setTypeName(\"\")\r\n        setSn(\"\")\r\n        setDate(\"\")\r\n        setOwner(\"\")\r\n    }\r\n\r\n    const ShowAllEqpmnt = () => {\r\n        setEquipmentState(props.store.getState().Equipment)\r\n        setTypeName(\"\")\r\n        setSn(\"\")\r\n        setDate(\"\")\r\n        setOwner(\"\")\r\n    }\r\n\r\n    const onChangeSelHandler = (e: React.ChangeEvent<{ value: unknown }>) => {    //для родного селекта e: ChangeEvent<HTMLSelectElement>\r\n        setError(\"\")\r\n        setTypeName(e.target.value as string)   // (e.currentTarget.value) для родного селекта\r\n        if (e.currentTarget.value === \"Vectus\") {\r\n            setSn(\"35-\")\r\n        } else if (e.currentTarget.value === \"Icon\") {\r\n            setSn(\"25-\")\r\n        } else if (e.currentTarget.value === \"Beyond Polus\") {\r\n            setSn(\"PG\")\r\n        } else {\r\n            setSn(\"\")\r\n        }\r\n    }\r\n\r\n    const onChangeOwnerHandler = (e: React.ChangeEvent<{ value: unknown }>) => {\r\n        setOwner(e.target.value as string)\r\n    }\r\n\r\n    const onChangeSnHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // setTypeName(\"\")\r\n        setSn(e.currentTarget.value)\r\n    }\r\n\r\n    const onChangeDateHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // setTypeName(\"\")\r\n        setDate(e.currentTarget.value)\r\n    }\r\n\r\n    const showInfo = (index: number) => {\r\n        setShowingIndex(index)\r\n        setIsInfoShowing(true)\r\n    }\r\n\r\n    function sortByOwner(a: EqpmntType, b: EqpmntType) {\r\n        switch (a.owner > b.owner) {\r\n            case true:\r\n                return 1\r\n            case false:\r\n                return -1\r\n            default:\r\n                return 0\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>Список оборудования\r\n            <div className={style.equipment}>Всё оборудование</div>\r\n            <Select labelId=\"E-TYPE\"\r\n                    label={\"TYPE\"}\r\n                    variant={\"outlined\"}\r\n                    error={!!error}\r\n                    style={{marginLeft: \"15px\", width: \"155px\"}}\r\n                    onChange={onChangeSelHandler}\r\n                    value={typeName}>\r\n                <option value={\"\"}>-</option>\r\n                <option value={\"Vectus\"}>Vectus</option>\r\n                <option value={\"Icon\"}>Icon</option>\r\n                <option value={\"MedArt\"}>MedArt</option>\r\n                <option value={\"Beyond Polus\"}>Beyond Polus</option>\r\n            </Select>\r\n            <TextField variant={\"outlined\"}\r\n                       size={\"medium\"}\r\n                       label={\"S/N (серийный номер)\"}\r\n                       error={!!error}\r\n                // helperText={error}\r\n                       style={{marginLeft: \"15px\"}}\r\n                       onChange={onChangeSnHandler}\r\n                       value={sn}/>\r\n            <TextField id=\"install-date\"\r\n                       label=\"Дата установки\"\r\n                       type=\"date\"\r\n                       defaultValue={\"\"}\r\n                       variant={\"outlined\"}\r\n                       size={\"medium\"}\r\n                       error={!!error}\r\n                // helperText={error}\r\n                       style={{marginLeft: \"15px\"}}\r\n                       onChange={onChangeDateHandler}\r\n                       value={date}\r\n            />\r\n\r\n            <Select label={\"Медцентр\"}\r\n                    variant={\"outlined\"}\r\n                    error={!!error}\r\n                    style={{marginLeft: \"15px\", width: \"155px\"}}\r\n                    onChange={onChangeOwnerHandler}\r\n                    value={owner}>\r\n                <option value={\"\"}>Медцентр</option>\r\n                <option value={\"ШайнЭст Плюс\"}>ШайнЭст Плюс</option>\r\n                <option value={\"ШайнЭст Люкс\"}>ШайнЭст Люкс</option>\r\n                <option value={\"ШайнЭст Медикал\"}>ШайнЭст Медикал</option>\r\n                <option value={\"ШайнЭст Голд\"}>ШайнЭст Голд</option>\r\n            </Select>\r\n\r\n            <Button variant={\"contained\"}\r\n                    size={\"large\"}\r\n                    style={{marginLeft: \"15px\", marginTop: \"5px\"}}\r\n                    onClick={addEqpmnt}>Добавить</Button>\r\n\r\n            <Button variant={\"contained\"}\r\n                    size={\"large\"}\r\n                    style={{marginLeft: \"15px\", marginTop: \"5px\"}}\r\n                    onClick={findEqpmnt}>Найти</Button>\r\n\r\n            <Button variant={\"contained\"}\r\n                    size={\"large\"}\r\n                    style={{marginLeft: \"15px\", marginTop: \"5px\"}}\r\n                    onClick={ShowAllEqpmnt}>Показать всё</Button>\r\n\r\n            {error && <div className={\"error\"} style={{color: \"red\"}}>{error}</div>}\r\n            <hr/>\r\n            <TableContainer component={Paper}>\r\n                <Table className={style.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Тип\r\n                            </TableCell>\r\n                            <TableCell align=\"right\"> </TableCell>\r\n                            <TableCell align=\"right\">S/N (серийный номер) </TableCell>\r\n                            <TableCell align=\"right\">Дата установки</TableCell>\r\n                            <TableCell align=\"right\">Владелец</TableCell>\r\n                            <TableCell align=\"right\">Удалить</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    {equipmentState.sort(sortByOwner).map((eq, index, array) => {\r\n                        return <TableRow key={eq.id}>\r\n                            <TableCell component=\"th\" scope=\"row\">{eq.name}\r\n                                {array[index + 1] && array[index + 1].owner !== array[index].owner && <hr/>}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\"> <Button size={\"small\"} color={\"secondary\"}\r\n                                                              onClick={() => showInfo(index)}>Info</Button></TableCell>\r\n                            <TableCell align=\"right\">{eq.sn}</TableCell>\r\n                            <TableCell align=\"right\">{eq.instDate}</TableCell>\r\n                            <TableCell align=\"right\">{eq.owner}\r\n                                {array[index + 1] && array[index + 1].owner !== array[index].owner && <hr/>}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <IconButton\r\n                                    onClick={() => delEq(eq.id)}\r\n                                    size={\"small\"}><Delete/>\r\n                                </IconButton>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    })}\r\n                    <TableBody>\r\n                    </TableBody>\r\n\r\n                </Table>\r\n            </TableContainer>\r\n            {isInfoShowing &&\r\n            <EquipmentCardWithTable index={showingIndex} setIsInfoShowing={setIsInfoShowing}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EquipmentListNewWithTable","import React from 'react';\r\nimport './App.css';\r\nimport EquipmentListNew from \"./Components/EquipmentList/EquipmentListNew\";\r\nimport {storeType} from \"./index\";\r\nimport Header from \"./Components/Header/Header\";\r\nimport VerticalTabs from \"./Components/VerticalTabs/VerticalTabs\";\r\nimport Navbar from \"./Components/Navbar/Navbar\";\r\nimport EquipmentListWithTable from \"./Components/CustomerCard/EquipmentListWithTable\";\r\nimport EquipmentListWithRedux from \"./Components/CustomerCard/EquipmentListWithRedux\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"./Redux/redux-store\";\r\nimport {initialEqpmntStateType} from \"./Redux/eqpmnt-reduser\";\r\nimport EquipmentListNewWithTable from \"./Components/EquipmentList/EquipmentListNewWithTable\";\r\n\r\n\r\ntype appPropsType = {\r\n    store: storeType\r\n}\r\n\r\nfunction App(props: appPropsType) {\r\n\r\n    const equipmentState = useSelector<AppRootStateType, initialEqpmntStateType>(state => state.Equipment)\r\n\r\n    return (\r\n        <div className=\"app-wrapper\">\r\n            <Header/>\r\n            {/*<VerticalTabs store={props.store}/>*/}\r\n            <Navbar/>\r\n\r\n            <div className='app-wrapper-content'>\r\n                <EquipmentListNewWithTable store={props.store}  />\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport eqpmntReducer from \"./eqpmnt-reduser\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    Equipment: eqpmntReducer,\r\n\r\n})\r\n\r\n\r\nexport let store = createStore(reducers)\r\n\r\n// определить автоматически тип всего объекта состояния\r\nexport type AppRootStateType = ReturnType<typeof reducers>\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './Redux/redux-store';\r\nimport {Provider} from \"react-redux\";\r\n\r\nexport type storeType = typeof store\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App store={store}/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"equipment\":\"EquipmentList_equipment__C_FwR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"equipmentCard\":\"EquipmentCard_equipmentCard__2buLA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1P9tD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1Dci9\",\"item\":\"Navbar_item__1TdlE\",\"activeLink\":\"Navbar_activeLink__1KE8J\"};"],"sourceRoot":""}